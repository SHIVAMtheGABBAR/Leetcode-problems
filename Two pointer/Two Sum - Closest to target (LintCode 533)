Given an array nums of n integers, find two integers in nums such that the sum is closest to a given number, target.

Return the absolute value of difference between the sum of the two numbers and the target.
--------------------------------------------------------------------------------------------------------------------
Input:  nums = [-1, 2, 1, -4] and target = 4
Output: 1
Explanation:
The minimum difference is 1. (4 - (2 + 1) = 1).

Input:  nums = [-1, -1, -1, -4] and target = 4
Output: 6
Explanation:
The minimum difference is 6. (4 - (- 1 - 1) = 6).
--------------------------------------------------------------------------------------------------------------------
Do it in O(nlogn) time complexity.
----------------------------------------------------------------------------------------
Approach: Sort the Array and use Two pointer and find the min difference

public int twoSumClosest(int[] nums, int target) {
        Arrays.sort(nums);
        int diff = Integer.MAX_VALUE;
        int start = 0, end = nums.length-1;
        while(start < end){
           int val = target - (nums[start] + nums[end]);
           if(diff > Math.abs(val)){
              diff = Math.abs(val);    
           }
           if(nums[start] + nums[end]>=target){
               end--;
           } else{
               start++;
           }
        }
        return diff;
    }
---------------------------------------------------------------------------------------
Time Complexity = O(NlogN)
Space Complexity = O(1)
---------------------------------------------------------------------------------------
