Given an array of N integers, and an integer K, find the number of pairs of elements in the array whose sum is equal to K.

Input:
N = 4, K = 6, arr[] = {1, 5, 7, 1}
Output: 2
Explanation: 
arr[0] + arr[1] = 1 + 5 = 6 
and arr[1] + arr[3] = 5 + 1 = 6.

Input:
N = 4, X = 2
arr[] = {1, 1, 1, 1}
Output: 6
Explanation: 
Each 1 will produce sum 2 with any 1.

Expected Time Complexity: O(N)
Expected Auxiliary Space: O(N)

------------------------------------------------------------------------------------------------------------------------
Approach: Traverse the array element one by one and check if (target-arr[i]) is in hashMap, and get the freq and add it to the count.
          Add the element arr[i] in hashMap. This is one traversal solution.
          
----------------------------------------------

class Solution {
    int getPairsCount(int[] arr, int n, int target) {
        HashMap<Integer, Integer> hmap = new HashMap<>();
        int count = 0;
        
        for(int i=0;i<arr.length;i++){
            int comp = target-arr[i];
            int freq = hmap.getOrDefault(comp, 0);
            
            count+= freq;
            
            hmap.put(arr[i], hmap.getOrDefault(arr[i], 0)+1);
        }
        return count;
    }
}
----------------------------------------
Time Complexity: O(N)
Auxiliary Space: O(N)
