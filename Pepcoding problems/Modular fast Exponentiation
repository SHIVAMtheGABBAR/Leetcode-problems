Modular Fast Exponentiation
--------------------------------------------
1. You are given a number x.
2. You are given another number n.
3. You are required to calculate x raised to the power n mod 10^9 + 7 in logn complexity.
------------------------------------------------------------------------------------------
Input Format
The first line contains the integer x and n.
Output Format
Output an integer in a line containing x^n mod 10^9+7.

------------------------------------------------------------------------------------------
import java.io.IOException;
import java.util.Scanner;

public class Main {
	public static long xpown(long x, long n, long p) { // Normal power calculation but we are using 10^7, so that answer will not overflow.
		if(n==0){
		    return 1;
		}
		long ans = xpown(x, n/2, p)%p;
		if(n%2==0){
		    return ((ans%p)*(ans%p))%p;
		} else{
		    return ((x%p)*(((ans%p)*(ans%p))%p))%p;
		}
	}

	public static void main(String[] args) throws NumberFormatException, IOException {
		Scanner scn = new Scanner(System.in);
		StringBuilder sb = new StringBuilder();
		
			long x = scn.nextInt();
			long n = scn.nextInt();

      long ans = xpown(x,n,1000000007);
			System.out.println(ans);
		}
}
