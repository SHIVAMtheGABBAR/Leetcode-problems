You are given an m x n integer matrix matrix with the following two properties:

Each row is sorted in non-decreasing order.
The first integer of each row is greater than the last integer of the previous row.
Given an integer target, return true if target is in matrix or false otherwise.

You must write a solution in O(log(m * n)) time complexity.
==============================================================================================
Approach: 

1. Start seaarching from first row and last column.
2. if target < matrix[row][column], then decrement column.
3. Else if target > matrix[row][column], then increment row.
4. else return true, when target matches value. 

==============================================================================================

class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        int row = 0, column = matrix[0].length-1; // start seaarching from first row and last column
        while(row < matrix.length && column>=0) {
            if(target == matrix[row][column])
                return true;
            else if (target < matrix[row][column])
                column--;
            else
                row++;
        }
        return false;
    }
}
